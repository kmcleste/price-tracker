name: Deploy

on:
  push:
    branches: [ "Main" ]
  pull_request:
    branches: [ "Main" ]

jobs:
  autopep8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: autopep8
        uses: peter-evans/autopep8@v1
        with:
          args: --recursive --in-place --aggressive --aggressive .
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: autopep8 action fixes
          title: Fixes by autopep8 action
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          reviewers:  kmcleste
          branch: autopep8-patches
  publish-ecr:
    if: "contains(github.event.head_commit.message, '#publish')"
    name: Build docker image and push to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ github.event.repository.name }}
      run: |
        aws ecr describe-repositories --repository-names ${ECR_REPOSITORY} || aws ecr create-repository --repository-name ${ECR_REPOSITORY}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA -f build/docker/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA
  publish-ghcr:
    if: "contains(github.event.head_commit.message, '#publish')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}

    - name: Build Docker image
      env:
        USERNAME: ${{ github.actor }}
        IMAGE: ${{ github.event.repository.name }}
        TAG: "latest"
      run: |
        docker build --tag ghcr.io/$USERNAME/$IMAGE:$TAG -f build/docker/Dockerfile .
        docker push ghcr.io/$USERNAME/$IMAGE:$TAG
